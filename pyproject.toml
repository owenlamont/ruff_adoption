[tool.ruff]

line-length = 140
indent-width = 4
preview = true
target-version = "py311"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "lf"

[tool.ruff.lint]
# See Ruff rules here: https://docs.astral.sh/ruff/rules/
select = [
    "A",
    "B",
    "C4",
    "D",
    "E",
    "F",
    "FURB",
    "I",
    "ISC",
    "NPY",
    "PT",
    "Q",
    "RET",
    "RUF",
    "SIM",
    "T20",
    "UP"
]
ignore = [
    "A003", # Class attribute {name} is shadowing a Python builtin
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in __init__
    "D202", # No blank lines allowed after function docstring
    "D213", # Multi-line docstring summary should start at the second line
    "D214", # Section is over-indented
    "D215", # Section underline is over-indented
    "D400", # First line should end with a period
    "D415", # First line should end with a period, question mark, or exclamation
    "D416", # Section name should end with a colon
    "D417", # Missing argument descriptions in the docstring
    "D418", # Function/ Method decorated with @overload shouldn't contain a docstring
    "E203", # Whitespace before ':' (fights rust format)
    "F401", # {} imported but unused (Fails to recognise all used imports in Jupyter)
    "FURB118", # Use operator.{operator} instead of defining a function
    "FURB140", # Use itertools.starmap instead of the generator
    "FURB142", # for-loop-set-mutations
    "ISC001", # Implicitly concatenated string literals on one line (fights rust format)
    "PT001", # pytest-fixture-incorrect-parentheses-style
    "PT004", # pytest-missing-fixture-name-underscore
    "PT012", # `pytest.raises()` block should contain a single simple statement
    "PT019", # Fixture {name} without value is injected as parameter
    "RET504", # Unnecessary assignment to <some var> before `return` statement
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "T201", # print found
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = [
    "B905", # Enforce strict argument on zip - but don't autofix as strict=False
]

[tool.ruff.lint.isort]
case-sensitive = false
combine-as-imports = true
force-sort-within-sections = true
lines-after-imports = 2
order-by-type = false
split-on-trailing-comma=false

[tool.ruff.lint.pydocstyle]
convention = "numpy"


[tool.typos]

[tool.typos.files]
extend-exclude = [
    "repos.txt"
]
